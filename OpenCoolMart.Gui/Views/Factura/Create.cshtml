@model OpenCoolMart.Domain.DTOs.FacturaRequestDto
@{
    ViewData["Title"] = "Factura ";
    //obtiene ventas
    List<SelectListItem> ventas = (List<SelectListItem>)ViewBag.Ventas;
    //obtiene clientes
    List<SelectListItem> clientes = (List<SelectListItem>)ViewBag.Clientes;
}
<!DOCTYPE html>
<html lang="es-mx">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:400,700">
    <title>Bootstrap Simple Registration Form</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <link href="~/css/Empleado/Create.css" rel="stylesheet" />
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container-xl table-wrapper">
            <hr />
            <h1 class="text-center">Detalles</h1>

            <div class="form-group">
                @Html.LabelFor(model => model.Folio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Folio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Folio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cliente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.DropDownList("Clientes", clientes, "Selecciona...", new { htmlAttributes = new { @class = "form-control col-md-2" } })
                    @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger" })
                </div>
            </div>
            @*DATOS DEL CLIENTE*@
            <div class="form-group form-row">
                <div class="col-md-3">
                    <input id="Correo" asp-for="@Model.Cliente.Correo" type="text" readonly />
                </div>
                <div class="col-md-3">
                    <input id="Domicilio" asp-for="@Model.Cliente.Domicilio" type="text" readonly />
                </div>
                <div class="col-md-3">
                    <input id="RFC" asp-for="@Model.Cliente.RFC" type="text" readonly />
                </div>
                <div class="col-md-3">
                    <input id="Telefono" asp-for="@Model.Cliente.Telefono" type="text" readonly />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Venta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownList("Ventas", ventas, "Selecciona...", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.ValidationMessageFor(model => model.Venta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group form-row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.UsoCFDI, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.UsoCFDI, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UsoCFDI, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group form-row">
                <div class="col-md-4"></div>
                <input type="submit" value="Crear Factura" class="btn btn-primary col-md-2" style="margin:10px" />
                <a asp-controller="Factura" asp-action="Index" class="btn btn-danger col-md-2 text-white" style="margin:10px">Cancelar</a>
            </div>

        </div>
    }
</body>

</html>
<script type="text/javascript">
    //Obtiene el id del cliente
    var comboCli = document.getElementById("Clientes");
    comboCli.addEventListener("change", Refresh);
    Refresh();
    //llena los datos del cliente
    function Refresh() {
        //obtiene el cliente
        fetch("https://localhost:44315/api/cliente/" + comboCli.value)
            .then(function (result) {
                //comprueba si el servidor responde 200
                if (result.ok) {
                    //retorna el resultado en un archivo json
                    return result.json();
                }
                else {
                    alert("Algo a ocurrido: " + result.status);
                }
            })
            .then(function (data) {
                //RELLENA LOS INPUT CON LOS DATOS DEL CLIENTE
                Domicilio = document.getElementById("Domicilio");
                RFC = document.getElementById("RFC");
                Telefono = document.getElementById("Telefono");
                Correo = document.getElementById("Correo");
                $.each(data, function (index, obj) {
                    console.log(obj);
                    Domicilio.value = obj.domicilio;
                    RFC.value = obj.rfc;
                    Telefono.value = obj.telefono;
                    Correo.value = obj.correo;
                });
            })
        //TODO: AGREGAR EL METODO FECTH PARA LAS VENTAS

    }
</script>
